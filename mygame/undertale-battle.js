// ==================== UNDERTALE BATTLE SYSTEM (–ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø) ====================

class UndertaleBattle {
    constructor() {
        this.playerHP = 100;
        this.enemyHP = 100;
        this.playerMaxHP = 100;
        this.enemyMaxHP = 100;
        this.currentTurn = 'player';
        this.battleActive = false;
        this.playerNft = null;
        this.enemyNft = null;
        this.battleLog = [];
        this.playerDodging = false;
    }

    init(playerNft, enemyNft) {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏—Ç–≤—ã:', playerNft.name, 'vs', enemyNft.name);
        
        this.playerNft = {...playerNft};
        this.enemyNft = {...enemyNft};
        this.playerHP = 100;
        this.enemyHP = 100;
        this.playerMaxHP = 100;
        this.enemyMaxHP = 100;
        this.battleActive = true;
        this.currentTurn = 'player';
        this.battleLog = [];
        this.playerDodging = false;
        
        // –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º UI –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∑–∞–ø—É—Å–∫–µ –±–∏—Ç–≤—ã
        this.createBattleUI(); 
        this.updateDisplay();
        this.showPlayerActions();
        this.addBattleLog(`–ë–∏—Ç–≤–∞ –Ω–∞—á–∞–ª–∞—Å—å! ${playerNft.name} –ø—Ä–æ—Ç–∏–≤ ${enemyNft.name}`);
        
        return true;
    }

    createBattleUI() {
        console.log('üèóÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –±–∏—Ç–≤—ã');
        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        const battleContainer = document.getElementById('battle-container');
        if (!battleContainer) {
            console.error('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä #battle-container!');
            return;
        }
        battleContainer.innerHTML = '';

        const battleHtml = `
            <div class="battle-arena">
                <div class="battle-participants">
                    <div class="participant left">
                        <img id="player-img" class="participant-img" src="${this.playerNft.img}" alt="Player NFT">
                        <div class="participant-name">–í—ã</div>
                        <div class="hp-container">
                            <div id="player-hp-bar" class="hp-bar" style="width: 100%;"></div>
                        </div>
                        <div class="hp-text" id="player-hp-text">HP: ${this.playerHP}/${this.playerMaxHP}</div>
                    </div>
                    <div class="vs-text">VS</div>
                    <div class="participant right">
                        <img id="enemy-img" class="participant-img" src="${this.enemyNft.img}" alt="Enemy NFT">
                        <div class="participant-name">–ü—Ä–æ—Ç–∏–≤–Ω–∏–∫</div>
                        <div class="hp-container">
                            <div id="enemy-hp-bar" class="hp-bar" style="width: 100%;"></div>
                        </div>
                        <div class="hp-text" id="enemy-hp-text">HP: ${this.enemyHP}/${this.enemyMaxHP}</div>
                    </div>
                </div>
            </div>

            <div class="battle-bottom-area">
                <div class="battle-log" id="battle-log">–ì–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –±–æ—é!</div>
                <div class="battle-actions-area" id="battle-actions">
                    </div>
            </div>
            <div id="end-battle-overlay" class="end-battle-overlay" style="display: none;">
                <div class="battle-result-container">
                    <div id="battle-result-text" class="battle-result"></div>
                    <div class="reward-info" id="reward-info" style="display: none;"></div>
                    <button id="close-battle-btn" class="battle-btn" style="background: #4caf50;">
                        –í–µ—Ä–Ω—É—Ç—å—Å—è
                    </button>
                </div>
            </div>
        `;
        
        // –í—Å—Ç–∞–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ç–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        battleContainer.innerHTML = battleHtml;
        document.getElementById('close-battle-btn').onclick = () => this.endBattle();
        console.log('‚úÖ UI –±–∏—Ç–≤—ã —Å–æ–∑–¥–∞–Ω');
    }
    
    updateDisplay() {
        const playerHpBar = document.getElementById('player-hp-bar');
        const playerHpText = document.getElementById('player-hp-text');
        const enemyHpBar = document.getElementById('enemy-hp-bar');
        const enemyHpText = document.getElementById('enemy-hp-text');

        if (playerHpBar) {
            const playerHpPercent = (this.playerHP / this.playerMaxHP) * 100;
            playerHpBar.style.width = `${playerHpPercent}%`;
            playerHpBar.classList.toggle('low', playerHpPercent <= 20);
            console.log(`‚úÖ HP –∏–≥—Ä–æ–∫–∞: ${this.playerHP}, –ø—Ä–æ—Ü–µ–Ω—Ç: ${playerHpPercent.toFixed(2)}%, —à–∏—Ä–∏–Ω–∞: ${playerHpBar.style.width}`);
        }
        if (playerHpText) {
            playerHpText.textContent = `HP: ${this.playerHP}/${this.playerMaxHP}`;
        }

        if (enemyHpBar) {
            const enemyHpPercent = (this.enemyHP / this.enemyMaxHP) * 100;
            enemyHpBar.style.width = `${enemyHpPercent}%`;
            enemyHpBar.classList.toggle('low', enemyHpPercent <= 20);
            console.log(`‚úÖ HP –≤—Ä–∞–≥–∞: ${this.enemyHP}, –ø—Ä–æ—Ü–µ–Ω—Ç: ${enemyHpPercent.toFixed(2)}%, —à–∏—Ä–∏–Ω–∞: ${enemyHpBar.style.width}`);
        }
        if (enemyHpText) {
            enemyHpText.textContent = `HP: ${this.enemyHP}/${this.enemyMaxHP}`;
        }
    }
    
    // ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∫–ª–∞—Å—Å–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...

    addBattleLog(message) {
        const logElement = document.getElementById('battle-log');
        if (logElement) {
            logElement.textContent = message;
        }
    }
    
    // ...
    
    endBattle() {
        console.log('üèÅ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–∏—Ç–≤—ã...');
        this.battleActive = false;
        
        // –£–¥–∞–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–∏—Ç–≤—ã
        const battleContainer = document.getElementById('battle-container');
        if (battleContainer) {
            battleContainer.innerHTML = '';
        }
        
        const battleScreen = document.getElementById('battle-screen');
        if (battleScreen) {
            battleScreen.style.display = 'none';
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        showScreen('main-screen', document.querySelector('.nav-item.active'));

        console.log('‚úÖ –í–æ–∑–≤—Ä–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω');
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.battleSystem = new UndertaleBattle();

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–∏—Ç–≤—ã
window.startUndertaleBattle = function(playerNft, enemyNft) {
    console.log('üöÄ === –ó–ê–ü–£–°–ö UNDERTALE –ë–ò–¢–í–´ ===');
    
    if (!playerNft || !enemyNft) {
        console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∞–Ω–Ω—ã–µ NFT!');
        alert('–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω NFT –¥–ª—è –±–∏—Ç–≤—ã!');
        return false;
    }
    
    const success = window.battleSystem.init(playerNft, enemyNft);
    console.log(success ? '‚úÖ –ë–∏—Ç–≤–∞ –∑–∞–ø—É—â–µ–Ω–∞!' : '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞!');
    return success;
};
