// ===== –ù–û–í–ê–Ø –ü–†–û–°–¢–ê–Ø –°–ò–°–¢–ï–ú–ê –ë–ò–¢–í =====

class SimpleBattleSystem {
    constructor() {
        this.playerHP = 100;
        this.enemyHP = 100;
        this.maxHP = 100;
        this.playerNft = null;
        this.enemyNft = null;
        this.isActive = false;
        this.battleContainer = null;
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∏—Ç–≤—ã
    init(playerNft, enemyNft) {
        console.log('üöÄ –ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –ø—Ä–æ—Å—Ç–æ–π –±–∏—Ç–≤—ã');
        
        this.playerHP = 100;
        this.enemyHP = 100;
        this.playerNft = playerNft;
        this.enemyNft = enemyNft;
        this.isActive = true;

        this.createUI();
        this.updateDisplay();
        
        return true;
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    createUI() {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –µ—Å–ª–∏ –µ—Å—Ç—å
        const existing = document.getElementById('simple-battle-container');
        if (existing) existing.remove();

        const battleHTML = `
            <div id="simple-battle-container" style="
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background: #000000;
                color: #ffffff;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                z-index: 9999;
                font-family: Arial, sans-serif;
                gap: 30px;
            ">
                <!-- –í—Ä–∞–≥ -->
                <div style="text-align: center;">
                    <h2 id="enemy-name" style="margin: 0 0 15px 0; font-size: 24px;">–í–†–ê–ì</h2>
                    <div style="display: flex; align-items: center; gap: 15px;">
                        <img id="enemy-img" style="width: 80px; height: 80px; border-radius: 10px; border: 2px solid #666;">
                        <div>
                            <div style="
                                width: 200px;
                                height: 20px;
                                background: #333;
                                border: 2px solid #666;
                                border-radius: 10px;
                                overflow: hidden;
                                position: relative;
                                margin-bottom: 5px;
                            ">
                                <div id="enemy-hp-bar" style="
                                    width: 100%;
                                    height: 100%;
                                    background: linear-gradient(90deg, #4caf50, #2e7d32);
                                    transition: width 0.5s ease;
                                "></div>
                            </div>
                            <div id="enemy-hp-text" style="font-size: 14px; color: #ccc; text-align: center;">100/100 HP</div>
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∞ –±–æ—è -->
                <button id="battle-btn" style="
                    background: #ff4444;
                    color: white;
                    border: none;
                    padding: 15px 30px;
                    font-size: 18px;
                    font-weight: bold;
                    border-radius: 10px;
                    cursor: pointer;
                    transition: background 0.2s;
                " onmouseover="this.style.background='#ff6666'" onmouseout="this.style.background='#ff4444'">
                    ‚öîÔ∏è –ê–¢–ê–ö–ê
                </button>

                <!-- –ò–≥—Ä–æ–∫ -->
                <div style="text-align: center;">
                    <h2 style="margin: 0 0 15px 0; font-size: 24px;">–í–´</h2>
                    <div style="display: flex; align-items: center; gap: 15px;">
                        <img id="player-img" style="width: 80px; height: 80px; border-radius: 10px; border: 2px solid #666;">
                        <div>
                            <div style="
                                width: 200px;
                                height: 20px;
                                background: #333;
                                border: 2px solid #666;
                                border-radius: 10px;
                                overflow: hidden;
                                position: relative;
                                margin-bottom: 5px;
                            ">
                                <div id="player-hp-bar" style="
                                    width: 100%;
                                    height: 100%;
                                    background: linear-gradient(90deg, #4caf50, #2e7d32);
                                    transition: width 0.5s ease;
                                "></div>
                            </div>
                            <div id="player-hp-text" style="font-size: 14px; color: #ccc; text-align: center;">100/100 HP</div>
                        </div>
                    </div>
                </div>

                <!-- –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ -->
                <button id="exit-btn" style="
                    background: #666;
                    color: white;
                    border: none;
                    padding: 10px 20px;
                    font-size: 14px;
                    border-radius: 5px;
                    cursor: pointer;
                    position: absolute;
                    top: 20px;
                    right: 20px;
                ">
                    –í—ã—Ö–æ–¥
                </button>

                <!-- –†–µ–∑—É–ª—å—Ç–∞—Ç –±–∏—Ç–≤—ã -->
                <div id="battle-result" style="
                    display: none;
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    background: #222;
                    border: 3px solid #666;
                    border-radius: 15px;
                    padding: 30px;
                    text-align: center;
                ">
                    <h2 id="result-title" style="margin: 0 0 15px 0; font-size: 28px;"></h2>
                    <p id="result-text" style="margin: 0 0 20px 0; font-size: 16px; color: #ccc;"></p>
                    <button id="result-btn" style="
                        background: #4caf50;
                        color: white;
                        border: none;
                        padding: 10px 20px;
                        font-size: 16px;
                        border-radius: 5px;
                        cursor: pointer;
                    ">
                        –í–µ—Ä–Ω—É—Ç—å—Å—è
                    </button>
                </div>
            </div>
        `;

        document.body.insertAdjacentHTML('beforeend', battleHTML);
        this.battleContainer = document.getElementById('simple-battle-container');

        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
        document.getElementById('battle-btn').addEventListener('click', () => this.fight());
        document.getElementById('exit-btn').addEventListener('click', () => this.exitBattle());
        document.getElementById('result-btn').addEventListener('click', () => this.exitBattle());
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    updateDisplay() {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –Ω–∞–∑–≤–∞–Ω–∏—è
        document.getElementById('player-img').src = this.playerNft.img;
        document.getElementById('enemy-img').src = this.enemyNft.img;
        document.getElementById('enemy-name').textContent = this.enemyNft.name.toUpperCase();

        // –û–±–Ω–æ–≤–ª—è–µ–º HP –±–∞—Ä—ã
        this.updateHPBars();
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ HP –±–∞—Ä–æ–≤
    updateHPBars() {
        const playerPercent = (this.playerHP / this.maxHP) * 100;
        const enemyPercent = (this.enemyHP / this.maxHP) * 100;

        // –û–±–Ω–æ–≤–ª—è–µ–º —à–∏—Ä–∏–Ω—É –±–∞—Ä–æ–≤
        document.getElementById('player-hp-bar').style.width = playerPercent + '%';
        document.getElementById('enemy-hp-bar').style.width = enemyPercent + '%';

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç HP
        const playerBar = document.getElementById('player-hp-bar');
        const enemyBar = document.getElementById('enemy-hp-bar');

        // –ò–≥—Ä–æ–∫
        if (playerPercent > 50) {
            playerBar.style.background = 'linear-gradient(90deg, #4caf50, #2e7d32)';
        } else if (playerPercent > 25) {
            playerBar.style.background = 'linear-gradient(90deg, #ff9800, #f57c00)';
        } else {
            playerBar.style.background = 'linear-gradient(90deg, #f44336, #d32f2f)';
        }

        // –í—Ä–∞–≥
        if (enemyPercent > 50) {
            enemyBar.style.background = 'linear-gradient(90deg, #4caf50, #2e7d32)';
        } else if (enemyPercent > 25) {
            enemyBar.style.background = 'linear-gradient(90deg, #ff9800, #f57c00)';
        } else {
            enemyBar.style.background = 'linear-gradient(90deg, #f44336, #d32f2f)';
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç HP
        document.getElementById('player-hp-text').textContent = `${this.playerHP}/100 HP`;
        document.getElementById('enemy-hp-text').textContent = `${this.enemyHP}/100 HP`;
    }

    // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—è
    fight() {
        if (!this.isActive) return;

        console.log('‚öîÔ∏è –ë–æ–π –Ω–∞—á–∞—Ç!');
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É
        const battleBtn = document.getElementById('battle-btn');
        battleBtn.disabled = true;
        battleBtn.textContent = '...';

        // –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –∫—Ç–æ –ø–æ–ª—É—á–∏—Ç —É—Ä–æ–Ω –ø–µ—Ä–≤—ã–º
        const playerFirst = Math.random() < 0.5;
        
        if (playerFirst) {
            console.log('üí• –ü–µ—Ä–≤—ã–º —É—Ä–æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –∏–≥—Ä–æ–∫');
            this.damagePlayer();
            
            setTimeout(() => {
                if (this.isActive && this.enemyHP > 0) {
                    console.log('üí• –í—Ç–æ—Ä—ã–º —É—Ä–æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –≤—Ä–∞–≥');
                    this.damageEnemy();
                    this.resetButton();
                }
            }, 1000);
        } else {
            console.log('üí• –ü–µ—Ä–≤—ã–º —É—Ä–æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –≤—Ä–∞–≥');
            this.damageEnemy();
            
            setTimeout(() => {
                if (this.isActive && this.playerHP > 0) {
                    console.log('üí• –í—Ç–æ—Ä—ã–º —É—Ä–æ–Ω –ø–æ–ª—É—á–∞–µ—Ç –∏–≥—Ä–æ–∫');
                    this.damagePlayer();
                    this.resetButton();
                }
            }, 1000);
        }
    }

    // –£—Ä–æ–Ω –∏–≥—Ä–æ–∫—É
    damagePlayer() {
        const damage = Math.floor(Math.random() * 20) + 10; // 10-30 —É—Ä–æ–Ω–∞
        this.playerHP = Math.max(0, this.playerHP - damage);
        
        console.log(`üíÄ –ò–≥—Ä–æ–∫ –ø–æ–ª—É—á–∏–ª ${damage} —É—Ä–æ–Ω–∞. HP: ${this.playerHP}`);
        this.updateHPBars();
        
        if (this.playerHP <= 0) {
            setTimeout(() => this.endBattle(false), 500);
        }
    }

    // –£—Ä–æ–Ω –≤—Ä–∞–≥—É
    damageEnemy() {
        const damage = Math.floor(Math.random() * 20) + 10; // 10-30 —É—Ä–æ–Ω–∞
        this.enemyHP = Math.max(0, this.enemyHP - damage);
        
        console.log(`üëπ –í—Ä–∞–≥ –ø–æ–ª—É—á–∏–ª ${damage} —É—Ä–æ–Ω–∞. HP: ${this.enemyHP}`);
        this.updateHPBars();
        
        if (this.enemyHP <= 0) {
            setTimeout(() => this.endBattle(true), 500);
        }
    }

    // –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏
    resetButton() {
        if (!this.isActive) return;
        
        const battleBtn = document.getElementById('battle-btn');
        battleBtn.disabled = false;
        battleBtn.textContent = '‚öîÔ∏è –ê–¢–ê–ö–ê';
    }

    // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±–∏—Ç–≤—ã
    endBattle(playerWon) {
        this.isActive = false;
        
        const resultDiv = document.getElementById('battle-result');
        const titleDiv = document.getElementById('result-title');
        const textDiv = document.getElementById('result-text');

        if (playerWon) {
            titleDiv.textContent = 'üèÜ –ü–û–ë–ï–î–ê!';
            titleDiv.style.color = '#4caf50';
            textDiv.textContent = `–í—ã –ø–æ–±–µ–¥–∏–ª–∏ ${this.enemyNft.name}!`;
            
            // –î–æ–±–∞–≤–ª—è–µ–º NFT –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
            if (window.collection) {
                window.collection.push({
                    ...this.enemyNft,
                    buyPrice: this.enemyNft.price || 150
                });
            }
        } else {
            titleDiv.textContent = 'üíÄ –ü–û–†–ê–ñ–ï–ù–ò–ï!';
            titleDiv.style.color = '#f44336';
            textDiv.textContent = `–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ ${this.enemyNft.name}...`;
            
            // –£–¥–∞–ª—è–µ–º NFT –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
            if (window.collection && window.activeBattleNft) {
                const index = window.collection.findIndex(nft => 
                    nft.name === this.playerNft.name && 
                    nft.img === this.playerNft.img
                );
                if (index !== -1) {
                    window.collection.splice(index, 1);
                    window.activeBattleNft = null;
                }
            }
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        if (window.battleHistory) {
            window.battleHistory.push({
                playerNft: {...this.playerNft},
                opponentNft: {...this.enemyNft},
                won: playerWon,
                timestamp: new Date().toISOString()
            });
        }

        resultDiv.style.display = 'block';

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        if (window.updateUI) window.updateUI();
        if (window.saveData) setTimeout(() => window.saveData(), 500);
    }

    // –í—ã—Ö–æ–¥ –∏–∑ –±–∏—Ç–≤—ã
    exitBattle() {
        if (this.battleContainer) {
            this.battleContainer.remove();
        }

        // –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        const screens = document.querySelectorAll('.screen');
        screens.forEach(s => s.classList.remove('active'));
        
        const mainScreen = document.getElementById('main-screen');
        if (mainScreen) {
            mainScreen.classList.add('active');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
        const navItems = document.querySelectorAll('.nav-item');
        navItems.forEach(item => item.classList.remove('active'));
        if (navItems[0]) {
            navItems[0].classList.add('active');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        if (window.renderCenterArea) window.renderCenterArea();
        if (window.updateUI) window.updateUI();

        console.log('üö™ –í—ã—Ö–æ–¥ –∏–∑ –±–∏—Ç–≤—ã');
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.simpleBattleSystem = new SimpleBattleSystem();

// –û–±–Ω–æ–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π battleSystem –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.battleSystem = {
    init: (playerNft, enemyNft) => {
        return window.simpleBattleSystem.init(playerNft, enemyNft);
    }
};

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
window.startUndertaleBattle = function(playerNft, enemyNft) {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Å—Ç–æ–π –±–∏—Ç–≤—ã');
    return window.simpleBattleSystem.init(playerNft, enemyNft);
};

console.log('‚úÖ –ü—Ä–æ—Å—Ç–∞—è –±–æ–µ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞!');
